name: dockercompose13371986837610165155
services:
  backmedicos:
    build:
      context: C:\Users\Franco\Desktop\proyectoMedicos\BackMedicos
      dockerfile: BackMedicos/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: BackMedicos
      target: base
    container_name: BackMedicos_1
    depends_on:
      sqlServiceDocker:
        condition: service_started
        required: true
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      CONNECTION_STRING: ""
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: backmedicos:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/BackMedicos.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      myRedDocker: null
    ports:
      - mode: ingress
        target: 8081
        published: "5001"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\Franco\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Franco\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Franco\Desktop\proyectoMedicos\BackMedicos\BackMedicos
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Franco\Desktop\proyectoMedicos\BackMedicos
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Franco\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Franco\.nuget\packages
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Franco\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Franco\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  sqlServiceDocker:
    container_name: sql-server-docker
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: ""
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      myRedDocker: null
    ports:
      - mode: ingress
        target: 1433
        published: "8006"
        protocol: tcp
networks:
  myRedDocker:
    name: dockercompose13371986837610165155_myRedDocker